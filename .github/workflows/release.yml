
name: Test & release master

on:
  push:
    branches:
      - master

jobs:
  release:
    name: Test & release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      actions: write

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install & Build Poetry
        run: pip install poetry

      - name: Get project version via poetry
        id: get_version
        run: echo "VERSION=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag v${{ steps.get_version.outputs.VERSION }}
          git push -f origin v${{ steps.get_version.outputs.VERSION }}
      - name: Create or Update Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          TAG_NAME="v${{ steps.get_version.outputs.VERSION }}"
          RELEASE_NAME="Release $TAG_NAME"

          # Try to create a new release; update if it already exists
          gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "Automated release for tag $TAG_NAME." || \
          gh release edit "$TAG_NAME" --title "$RELEASE_NAME" --notes "Updated release for tag $TAG_NAME."
